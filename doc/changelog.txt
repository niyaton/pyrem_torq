Pyremics Torq changelog
===========================

Known Bugs
  - None.

0.5 2011/09/29
  - Added a SubApply class, which apply a functions to a sequence on way of parsing.

0.4 2011/09/20
  - Breaking change: Now pyrem_torq doesn't uses pyrem_strs.
    The treeseq structure includes each index of its inner strings.
  - Dropped pyrem_torq.expression_shortname.
  - Renamed some classes: Req -> Require, Xcp -> RequireBut, XcpThenAny -> AnyBut.
  - Renamed Marker -> Holder. Its constructor now doesn't require the name.
  - Breaking change: Dropped ExprDict.
  - Breaking change: a function pyrem_torq.script.compile() now requires all 
    replacements "filled" with argument replaces. For each "@name" in parameter src, 
    replaces["name"] must returns a valid TorqExpression object. Otherwise, the 
    function raise a KeyError.
  - Breaking change: Dropped a method build() from TorqExpression and its descendant 
    classes. (The build() methods did two jobs, factory and optimizer, so confusing 
    as an API.)
  - Added a method optimized() to TorqExpression and its descendant classes. 
    (the optimized() methods have been split from the old build() methods.)
  - Bug fix: the compile() function generated wrong code for a special node "any_node".
  - TorqExpression.match() and .parse() now don't return a drop sequence as a third
    return value. (because Drop() expression has been removed.)
  - Removed Drop() expression. In order to drop sub-sequences, use
    BuildToNode("null", expr) for Drop(expr), and do 
    seq = seq_split_nodes_with_label(seq, "null")[0] afterwards.
  - operator <> has been renamed to [].

0.3 2010/03/11
  - Changed module name from pytorqy to pyrem_torq.
  - Added an experimental feature, operator_builder.
  - Revised grammar.

0.2 2010/02/22
  - Changed internal data structures for optimization.

0.1 2009/12/17
  - The initial version.

